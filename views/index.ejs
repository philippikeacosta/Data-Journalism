<%- include('global/header', {title: "Home"}); %>

<h1>Life Expectancies and Elections</h1>

<div id="electionmap"></div>
<div id="lifemap"></div>


<%- include ('global/footer'); %>
<script src="js/plotly-latest.min.js"></script>
<script>
  let election = <%-election %>

    let life = <%-life %>

      console.log(election);

  let graph = document.getElementById("chart");
  let electionmap = document.getElementById("electionmap");
  let lifemap = document.getElementById("lifemap");
  //console.log(Object.values(election[0]).Dpercent);


  let data = [{
    type: "choroplethmapbox",
    name: "US states",
    geojson: "https://raw.githubusercontent.com/python-visualization/folium/master/examples/data/us-states.json",
    locations: ["AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR",
      "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"
    ],
    z: [election[1].Dpercent, election[2].Dpercent, election[3].Dpercent, election[4].Dpercent, election[5].Dpercent, election[6].Dpercent, election[7].Dpercent, election[8].Dpercent, election[9].Dpercent, election[10].Dpercent, election[11]
      .Dpercent, election[12].Dpercent, election[13].Dpercent, election[14].Dpercent, election[15].Dpercent, election[16].Dpercent, election[17].Dpercent, election[18].Dpercent, election[19].Dpercent, election[20].Dpercent, election[21]
      .Dpercent, election[22].Dpercent, election[23].Dpercent, election[24].Dpercent, election[25].Dpercent, election[26].Dpercent, election[27].Dpercent, election[28].Dpercent, election[29].Dpercent, election[30].Dpercent, election[31]
      .Dpercent, election[32].Dpercent, election[33].Dpercent, election[34].Dpercent, election[35].Dpercent, election[36].Dpercent, election[37].Dpercent, election[38].Dpercent, election[39].Dpercent, election[40].Dpercent, election[41]
      .Dpercent, election[42].Dpercent, election[43].Dpercent, election[44].Dpercent, election[45].Dpercent, election[46].Dpercent, election[47].Dpercent, election[48].Dpercent, election[49].Dpercent, election[50].Dpercent, election[51]
      .Dpercent
    ],
    zmin: 0.27,
    zmax: 0.66,
    colorscale: [
      [0, 'rgb(184,12,9)'],
      [1, 'rgb(0, 170, 255)']
    ],
    colorbar: {
      y: 0,
      yanchor: "bottom",
      title: {
        text: "Biden Vote Share",
        side: "right"
      }
    }
  }];

  let layout = {
    mapbox: {
      style: "dark",
      center: {
        lon: -96,
        lat: 40
      },
      zoom: 3.5
    },
    width: 1200,
    height: 800,
    margin: {
      t: 0,
      b: 0
    }
  };

  let config = {
    mapboxAccessToken: "pk.eyJ1IjoicHBpa2VhIiwiYSI6ImNramV4czZqbzV0ZXcycXJ3OG0wNDBvc3cifQ.MAj1mFEKGNJffhkPrB7J9A"
  };

  Plotly.newPlot(electionmap, data, layout, config).then(gd => {
    gd.on('plotly_click', d => {
      let pt = (d.points || [])[0];
      //console.log(pt.location);
      //console.log(pt.properties.name);
      //console.log(Object.values(data)[0].locations);

      let link = "html/" + pt.properties.name.replace(/ /g, "_") + ".html";
      window.open(link);
    });
  });

  let data2 = [{
    type: "choroplethmapbox",
    name: "US states",
    geojson: "https://raw.githubusercontent.com/python-visualization/folium/master/examples/data/us-states.json",
    locations: ["AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR",
      "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"
    ],
    z: [life[0].avg, life[1].avg, life[2].avg, life[3].avg, life[4].avg, life[5].avg, life[6].avg, life[7].avg, life[8].avg, life[9].avg, life[10].avg, life[11]
      .avg, life[12].avg, life[13].avg, life[14].avg, life[15].avg, life[16].avg, life[17].avg, life[18].avg, life[19].avg, life[20].avg, life[21]
      .avg, life[22].avg, life[23].avg, life[24].avg, life[25].avg, life[26].avg, life[27].avg, life[28].avg, life[29].avg, life[30].avg, life[31]
      .avg, life[32].avg, life[33].avg, life[34].avg, life[35].avg, life[36].avg, life[37].avg, life[38].avg, life[39].avg, life[40].avg, life[41]
      .avg, life[42].avg, life[43].avg, life[44].avg, life[45].avg, life[46].avg, life[47].avg, life[48].avg, life[49].avg, life[50].avg
    ],
    zmin: 75,
    zmax: 82,
    colorscale: [
      [0, 'rgb(184,12,9)'],
      [1, 'rgb(0, 170, 255)']
    ],
    colorbar: {
      y: 0,
      yanchor: "bottom",
      title: {
        text: "Biden Vote Share",
        side: "right"
      }
    }
  }];

  let layout2 = {
    mapbox: {
      style: "dark",
      center: {
        lon: -96,
        lat: 40
      },
      zoom: 3.5
    },
    width: 1200,
    height: 800,
    margin: {
      t: 0,
      b: 0
    }
  };

  let config2 = {
    mapboxAccessToken: "pk.eyJ1IjoicHBpa2VhIiwiYSI6ImNramV4czZqbzV0ZXcycXJ3OG0wNDBvc3cifQ.MAj1mFEKGNJffhkPrB7J9A"
  };

  Plotly.newPlot(lifemap, data2, layout2, config2).then(gd => {
    gd.on('plotly_click', d => {
      let pt = (d.points || [])[0];
      //console.log(pt.location);
      //console.log(pt.properties.name);
      //console.log(Object.values(data)[0].locations);

      let link = "html/" + pt.properties.name.replace(/ /g, "_") + ".html";
      window.open(link);
    });
  });
</script>

</body>

</html>
